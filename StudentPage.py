# Form implementation generated from reading ui file 'StudentPage.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(QtWidgets.QMainWindow):
    def __init__(self, cursor, username):
        super(Ui_MainWindow, self).__init__()
        self.cursor = cursor
        self.username = username
        sql = "select uid from user where username = '{}'".format(username)
        cursor.execute(sql)
        uid = cursor.fetchone()[0]
        self.sid = uid
        self.setupUi(self)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.server = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.server.setGeometry(QtCore.QRect(210, 90, 321, 371))
        self.server.setObjectName("server")
        self.addReserve = QtWidgets.QPushButton(parent=self.server)
        self.addReserve.setGeometry(QtCore.QRect(110, 60, 101, 51))
        self.addReserve.setObjectName("addReserve")
        self.addBorrow = QtWidgets.QPushButton(parent=self.server)
        self.addBorrow.setGeometry(QtCore.QRect(110, 170, 101, 51))
        self.addBorrow.setObjectName("addBorrow")
        self.addReturn = QtWidgets.QPushButton(parent=self.server)
        self.addReturn.setGeometry(QtCore.QRect(110, 280, 101, 51))
        self.addReturn.setObjectName("addReturn")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        self.AccountManage = QtWidgets.QMenu(parent=self.menubar)
        self.AccountManage.setObjectName("AccountManage")
        MainWindow.setMenuBar(self.menubar)
        self.addBook = QtGui.QAction(parent=MainWindow)
        self.addBook.setObjectName("addBook")
        self.alterBook = QtGui.QAction(parent=MainWindow)
        self.alterBook.setObjectName("alterBook")
        self.addStudent = QtGui.QAction(parent=MainWindow)
        self.addStudent.setObjectName("addStudent")
        self.alterStudent = QtGui.QAction(parent=MainWindow)
        self.alterStudent.setObjectName("alterStudent")
        self.addUser = QtGui.QAction(parent=MainWindow)
        self.addUser.setObjectName("addUser")
        self.alterUser = QtGui.QAction(parent=MainWindow)
        self.alterUser.setObjectName("alterUser")
        self.badReserve = QtGui.QAction(parent=MainWindow)
        self.badReserve.setObjectName("badReserve")
        self.badBorrow = QtGui.QAction(parent=MainWindow)
        self.badBorrow.setObjectName("badBorrow")
        self.alterProfile = QtGui.QAction(parent=MainWindow)
        self.alterProfile.setObjectName("alterProfile")
        self.logOut = QtGui.QAction(parent=MainWindow)
        self.logOut.setObjectName("logOut")
        self.alterPassword = QtGui.QAction(parent=MainWindow)
        self.alterPassword.setObjectName("alterPassword")
        self.AccountManage.addAction(self.alterProfile)
        self.AccountManage.addAction(self.alterPassword)
        self.AccountManage.addAction(self.logOut)
        self.menubar.addAction(self.AccountManage.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # 设置状态栏内容
        mylabel = QtWidgets.QLabel()
        mylabel.setText("欢迎您，学生" + self.username + "！")
        self.statusbar.addWidget(mylabel)
        # 绑定事件
        self.addReserve.clicked.connect(self.reserveBook)
        self.addBorrow.clicked.connect(self.borrowBook)
        self.addReturn.clicked.connect(self.manage_table)
        self.AccountManage.triggered.connect(self.manageAccount)
        # 在状态栏显示最热门书籍和最活跃用户，间距大一点
        mylabel = QtWidgets.QLabel()
        mylabel.setText("       ")
        self.statusbar.addWidget(mylabel)
        # 调用数据库函数
        sql = "select hotBook()"
        self.cursor.execute(sql)
        result = self.cursor.fetchone()
        # 查找对应书名
        sql = "select bname from book where bid = '{}'".format(result[0])
        self.cursor.execute(sql)
        result = self.cursor.fetchone()
        mylabel = QtWidgets.QLabel()
        mylabel.setText("本月最热门书籍：" + result[0])
        self.statusbar.addWidget(mylabel)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "管理页面"))
        self.server.setTitle(_translate("MainWindow", "服务"))
        self.addReserve.setText(_translate("MainWindow", "预约图书"))
        self.addBorrow.setText(_translate("MainWindow", "借阅图书"))
        self.addReturn.setText(_translate("MainWindow", "还书"))
        self.AccountManage.setTitle(_translate("MainWindow", "账号设置"))
        self.addBook.setText(_translate("MainWindow", "添加图书"))
        self.alterBook.setText(_translate("MainWindow", "图书信息维护"))
        self.addStudent.setText(_translate("MainWindow", "添加学生"))
        self.alterStudent.setText(_translate("MainWindow", "学生信息维护"))
        self.addUser.setText(_translate("MainWindow", "添加用户"))
        self.alterUser.setText(_translate("MainWindow", "用户信息维护"))
        self.badReserve.setText(_translate("MainWindow", "预约信息"))
        self.badBorrow.setText(_translate("MainWindow", "借阅信息"))
        self.alterProfile.setText(_translate("MainWindow", "修改资料"))
        self.logOut.setText(_translate("MainWindow", "退出登录"))
        self.alterPassword.setText(_translate("MainWindow", "修改密码"))

    def manageAccount(self, m):
        if m.text() == "修改资料":
            from alterProfile import Ui_Form
            self.alterProfile = Ui_Form(self.cursor, self.username)
            self.alterProfile.show()
        elif m.text() == "修改密码":
            from alterPassword import Ui_Form
            self.alterPassword = Ui_Form(self.cursor, self.username)
            self.alterPassword.show()
        elif m.text() == "退出登录":
            # 回到登录页面
            from Login import Ui_Form
            self.login = Ui_Form(self.cursor)
            self.login.show()
            self.close()

    def reserveBook(self):
        # 打开reserveBook页面
        from reserveBook import Ui_Form
        self.reserveBook = Ui_Form(self.cursor)
        self.reserveBook.show()

    def borrowBook(self):
        from borrowBook import Ui_Form
        self.borrowBook = Ui_Form(self.cursor)
        self.borrowBook.show()

    def manage_table(self):
        from Manage import Ui_Form
        self.manage = Ui_Form(self.cursor, self.sid)
        self.manage.show()


if __name__ == "__main__":
    import sys
    import pymysql
    app = QtWidgets.QApplication(sys.argv)
    db = pymysql.connect(
        host="localhost",
        user="root",
        password="10086",
        database="library",
        charset="utf8"
    )
    cursor = db.cursor()
    ui = Ui_MainWindow(cursor, "student1")
    ui.show()
    sys.exit(app.exec())
